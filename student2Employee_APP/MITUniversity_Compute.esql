

CREATE COMPUTE MODULE MITUniversity_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE inputRef REFERENCE TO InputRoot;
		DECLARE outputRef REFERENCE TO OutputRoot;
		
		CALL CopyMessageHeaders();
		CALL CreateMITMessage(inputRef, 
							outputRef,
							Environment.Variables.CurrentStudent, 
							Environment.Variables.Age, 
							Environment.Variables.Grade);
		
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = MIT_LABEL||'.EDU';
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE CreateMITMessage(		IN InputRoot REFERENCE, 
											INOUT OutputRoot REFERENCE, 
											IN vCurrentStudents INT,
											IN vAge INT,
											IN vGrade CHAR) 
	BEGIN
		IF (NOT EXISTS(OutputRoot.XMLNSC.*[])) THEN
			CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		END IF;
		SET OutputRoot.XMLNSC.University.Name = MIT_NAME;
		SET OutputRoot.XMLNSC.University.ApplicantName.Firstname = InputRoot.XMLNSC.Applicants.Student[vCurrentStudents].Firstname;
		SET OutputRoot.XMLNSC.University.ApplicantName.Surname = InputRoot.XMLNSC.Applicants.Student[vCurrentStudents].Lastname;
		
		SET OutputRoot.XMLNSC.University.ApplicantContacts.Phone = InputRoot.XMLNSC.Applicants.Student[vCurrentStudents].Phone;
		SET OutputRoot.XMLNSC.University.ApplicantContacts.Email = InputRoot.XMLNSC.Applicants.Student[vCurrentStudents].Email;
		SET OutputRoot.XMLNSC.University.ApplicantGrade = vGrade;
		SET OutputRoot.XMLNSC.University.ApplicantAge = vAge;
		SET OutputRoot.XMLNSC.University.ApplicantGender = InputRoot.XMLNSC.Applicants.Student[vCurrentStudents].Sex;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
